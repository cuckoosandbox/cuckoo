[sniffer]
# Enable or disable the use of an external sniffer (tcpdump) [yes/no].
enabled = {{ auxiliary.sniffer.enabled }}

# Specify the path to your local installation of tcpdump. Make sure this
# path is correct.
tcpdump = {{ auxiliary.sniffer.tcpdump }}

# We used to define the network interface to capture on in auxiliary.conf, but
# this has been moved to the "interface" field of each Virtual Machinery
# configuration.

# Specify a Berkeley packet filter to pass to tcpdump.
# Note: packer filtering is not possible when using "nictrace" functionality
# from VirtualBox (for example dumping inter-VM traffic).
bpf = {{ auxiliary.sniffer.bpf }}

[mitm]
# Enable man in the middle proxying (mitmdump) [yes/no].
enabled = {{ auxiliary.mitm.enabled }}

# Specify the path to your local installation of mitmdump. Make sure this
# path is correct.
mitmdump = {{ auxiliary.mitm.mitmdump }}

# Listen port base. Each virtual machine will use its own port to be
# able to make a good distinction between the various running analyses.
# Generally port 50000 should be fine, in this case port 50001, 50002, etc
# will also be used - again, one port per analyses.
port_base = {{ auxiliary.mitm.port_base }}

# Script file to interact with the network traffic. Please refer to the
# documentation of mitmproxy/mitmdump to get an understand of their internal
# workings. (https://mitmproxy.org/doc/scripting/inlinescripts.html)
script = {{ auxiliary.mitm.script }}

# Path to the certificate to be used by mitmdump. This file will be
# automatically generated for you if you run mitmdump once. It's just that
# you have to copy it from ~/.mitmproxy/mitmproxy-ca-cert.p12 to somewhere
# in the analyzer/windows/ directory. Recommended is to write the certificate
# to analyzer/windows/bin/cert.p12, in that case the following option should
# be set to bin/cert.p12.
certificate = {{ auxiliary.mitm.certificate }}

[replay]
# Enable PCAP replay capabilities.
enabled = {{ auxiliary.replay.enabled }}

# Specify the path to your local installation of mitmdump. Make sure this
# path is correct. Note that this should be mitmproxy 3.0.5 or higher,
# installed in a separate virtualenv (or similar).
mitmdump = {{ auxiliary.replay.mitmdump }}

# Listen port base. Each virtual machine will use its own port to be
# able to make a good distinction between the various running analyses.
# Generally port 51000 should be fine, in this case port 51001, 51002, etc
# will also be used - again, one port per analyses.
port_base = {{ auxiliary.replay.port_base }}

# Path to the certificate to be used by mitmdump. This file will be
# automatically generated for you if you run mitmdump once. It's just that
# you have to copy it from ~/.mitmproxy/mitmproxy-ca-cert.p12 to somewhere
# in the analyzer/windows/ directory. Recommended is to write the certificate
# to analyzer/windows/bin/cert.p12, in that case the following option should
# be set to bin/cert.p12.
certificate = {{ auxiliary.replay.certificate }}

[services]
# Provide extra services accessible through the network of the analysis VM
# provided in separate, standalone, Virtual Machines [yes/no].
enabled = {{ auxiliary.services.enabled }}

# Comma-separated list with each Virtual Machine containing said service(s).
services = {{ auxiliary.services.services }}

# Time in seconds required to boot these virtual machines. E.g., some services
# will only get online after a minute because initialization takes a while.
timeout = {{ auxiliary.services.timeout }}

[reboot]
# This auxiliary module should be enabled for reboot analysis support.
enabled = {{ auxiliary.reboot.enabled }}

[sysmon]
enabled = {{ auxiliary.sysmon.enabled }}
