[physical]
# Specify a comma-separated list of available machines to be used. For each
# specified ID you have to define a dedicated section containing the details
# on the respective machine. (E.g. physical1,physical2,physical3)
machines = {{ physical.physical.machines }}

# Credentials to access the machine
user = {{ physical.physical.user }}
password = {{ physical.physical.password }}

# Default network interface.
interface = {{ physical.physical.interface }}

[fog]
# Credentials to access the FOG website. We're using basic screenscraping
# techniques to programmatically schedule new "image download tasks", i.e., to
# instruct FOG to make a laptop restore the original image on the next reboot.
# Note: if you're using FOG to manage your physical machines without the
# cronjob functionality as per documentation you *will* have to change the
# following "none" to "localhost" or similar (the "none" is for backwards
# compatibility where users are still using the cronjob-style tasking, and
# thus effectively ignore the FOG integration). The FOG functionality has only
# been tested against the FOG 1.2.0 stable release.
hostname = {{ physical.fog.hostname }}
username = {{ physical.fog.username }}
password = {{ physical.fog.password }}

{% for machine in config("physical:physical:machines") %}
[{{ machine }}]
# Specify the label name of the current machine as specified in your
# physical machine configuration.
label = {{ physical[machine].label }}

# Specify the operating system platform used by current machine
# [windows/darwin/linux].
platform = {{ physical[machine].platform }}

# Specify the IP address of the current machine. Make sure that the IP address
# is valid and that the host machine is able to reach it. If not, the analysis
# will fail.
ip = {{ physical[machine].ip }}

# (Optional) Specify the OS profile to be used by volatility for this
# machine. This will override the guest_profile variable in
# memory.conf which solves the problem of having multiple types of VMs
# and properly determining which profile to use.
osprofile = {{ physical[machine].osprofile }}
{% endfor %}
