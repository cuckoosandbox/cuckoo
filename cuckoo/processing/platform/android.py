# Copyright (C) 2019 Cuckoo Foundation.
# This file is part of Cuckoo Sandbox - http://www.cuckoosandbox.org
# See the file 'docs/LICENSE' for copying permission.

import os
import json
import logging
import dateutil.parser

from cuckoo.common.abstracts import BehaviorHandler

log = logging.getLogger(__name__)

class AndroidRuntime(BehaviorHandler):
    """Parse Java virtual machine logs generated by Frida."""

    def __init__(self, *args, **kwargs):
        super().__init__(*args, **kwargs)
        self.processes = []

    def handles_path(self, path):
        if "jvmHook" in path:
            self.matched = True
            return True

    def parse(self, path):
        parser = JVMHookParser(open(path, "r"))
        
        filename = os.path.basename(os.path.splitext(path)[0])
        pid = int(filename.split("_")[1])

        calls = []
        for api_call in parser:
            calls.append(api_call)

        self.processes.append({
            "type": "process",
            "pid": pid,
            "calls": calls
        })

        return self.processes

    def run(self):
        if not self.matched:
            return
        return self.processes

class JVMHookParser(object):

    def __init__(self, fd):
        self.fd = fd

    def __iter__(self):
        for line in self.fd:
            api_call = json.loads(line)
            api_call["this"].pop("class", None)
            api_call["time"] = dateutil.parser.parse(api_call["time"])

            yield api_call
